Primero debemos instalar XAMPP desde su pagina web: https://www.apachefriends.org/es/download.html

Tras su instalacion vamos a buscar la ruta XAMPP/htdocs y crear una carpeta llamada android.

Dentro de dicha carpeta añadimos dos mas, una llamada includes y otra llamada v1

Carpeta includes:

constants.php:
<?php
    define('DB_NAME','android');
    define('DB_USER','root');
    define('DB_PASSWORD','');
    define('DB_HOST','localhost');

----------------------------------------------------

DbConnect.php_
<?php

    class DbConnect{

        private $con;

        function __construct(){

        }

        function connect(){
            include_once dirname(__FILE__).'/Constants.php';
            $this->con = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

            if(mysqli_connect_errno()){
                echo "Failed to conect database".mysqli_connect_err();
            }

            return $this->con;
        }
    }

---------------------------------------------------------------------------------------

DbOperations.php:
<?php

    class DbOperation{
        private $con;

        function __construct(){

            require_once dirname(__FILE__).'/DbConnect.php';

            $db = new DbConnect();

            $this->con = $db->connect();
        }

        public function createuser($username, $pass, $email){
            if($this->isUserExist($username, $email)){
                return 0;
            }else{
                $password = md5($pass);
                $stmt = $this->con->prepare("INSERT INTO `users` (`id`, `username`, `password`, `email`) VALUES (NULL, ?, ?, ?);");
                $stmt->bind_param("sss",$username,$password,$email);
            
                if($stmt->execute()){
                    return 1;
                }else{
                    return 2;
                }
            }
        }

        public function userLogin($username, $pass){
            $password = md5($pass);
            $stmt = $this->con->prepare("SELECT id FROM users WHERE username = ? AND password = ?");
            $stmt->bind_param("ss", $username, $password);
            $stmt->execute();
            $stmt->store_result();
            return $stmt->num_rows > 0;
        }

        public function getUserByUsername($username){
            $stmt = $this->con->prepare("SELECT * FROM users WHERE username = ?");
            $stmt->bind_param("s", $username);
            $stmt->execute();
            return $stmt->get_result()->fetch_assoc();

        }

        public function getTaskNoID(){
            $stmt = $this->con->prepare("SELECT * FROM tasks WHERE fk_iduser = '6'");
            $stmt->execute();
            return $stmt->get_result()->fetch_assoc();
        }
            
        

        private function isUserExist($username, $email){
            $stmt = $this->con->prepare("Select id FROM users where username = ? OR email = ?");
            $stmt->bind_param("ss", $username, $email);
            $stmt->execute();
            $stmt->store_result();
            return $stmt->num_rows > 0;
        }
    }

 -------------------------------------------------------------------------------------------------------------------------------

Carpeta v1:

getTaskNoId.php (Este archivo pude sufrir cambios estoy trabajando en el):

<?php
require_once '../includes/DbOperations.php';
$response=array();


if($_SERVER['REQUEST_METHOD']=='POST'){
    
        //operate de data

        $db = new DbOperation();
        $result = $db->getTaskNoID();
            //Crear un json que contenga todos los resultados ahora mismo solo muestra el primero que se encuentra
            
            $response['error']= false;
            $response['id'] = $result['id'];
            $response['fk_iduser'] = $result['fk_iduser'];
            $response['title'] = $result['title'];
            $response['text'] = $result['text'];
            
        
    }else{
        $response['error'] = true;
        $response['message']="Unespected error";
    }


echo json_encode($response);

-----------------------------------------------------------------------------------------------------------------------------------

registerUser.php:

<?php
require_once '../includes/DbOperations.php';
$response=array();


if($_SERVER['REQUEST_METHOD']=='POST'){
    if(isset($_POST['username']) and isset($_POST['email']) and isset($_POST['password'])){
        //operate de data

        $db = new DbOperation();
        $result = $db->createUser(   $_POST['username'],
                                    $_POST['password'],
                                    $_POST['email']
                                );
        if($result==1){
            $response['error']= false;
            $response['message']="User registered successfuly";
        }elseif($result==2){
            $response['error']= true;
            $response['message']="Unespected error";
        }elseif($result==0){
            $response['error']= true;
            $response['message']="It seems you are already registered";
        }
    }else{
        $response['error'] = true;
        $response['message']="Requiered fields are missing";
    }
}else{
    $response['error']=true;
    $response['message']="Invalid Request";
}

echo json_encode($response);

------------------------------------------------------------------------------------------------------------------------

userLogin.php:

<?php
require_once '../includes/DbOperations.php';
$response=array();

if($_SERVER['REQUEST_METHOD']=='POST'){

    if(isset($_POST['username']) and isset($_POST['password'])){
        $db = new DbOperation();

        if($db->userLogin($_POST['username'], $_POST['password'])){
            $user = $db->getUserByUsername($_POST['username']);
            $response['error'] = false;
            $response['id'] = $user['id'];
            $response['email'] = $user['email'];
            $response['username'] = $user['username'];
        }else{
            $response['error'] = true;
            $response['message'] = "Invalid username or password";
        }
    }else{
        $response['error'] = true;
        $response['message'] = "REQUIERED FIELDS ARE MISSING";
    }
}

echo json_encode($response);







Ahora vamos a montar la base de datos.

Abrimos xampp y arancamos apache y mysql, pulsamos en administrar Mysql

Aqui creamos una nueva base de datos e importamos el archivo android.sql (se encuentra en el mismo proyecto y aqui tambien lo dejo escrito por si acaso)

-- phpMyAdmin SQL Dump
-- version 5.2.1
-- https://www.phpmyadmin.net/
--
-- Servidor: 127.0.0.1
-- Tiempo de generación: 01-04-2024 a las 09:26:49
-- Versión del servidor: 10.4.32-MariaDB
-- Versión de PHP: 8.2.12

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Base de datos: `android`
--

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `tasks`
--

CREATE TABLE `tasks` (
  `id` int(11) NOT NULL,
  `fk_iduser` int(11) NOT NULL,
  `title` varchar(100) NOT NULL,
  `text` varchar(100) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Volcado de datos para la tabla `tasks`
--

INSERT INTO `tasks` (`id`, `fk_iduser`, `title`, `text`) VALUES
(1, 3, 'Hola prueba', 'este es el task de prueba'),
(2, 3, 'Hola prueba', 'este es el task de prueba'),
(6, 6, 'Master prueba', 'soy el master'),
(7, 6, 'Master prueba', 'soy el master');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `users`
--

CREATE TABLE `users` (
  `id` int(11) NOT NULL,
  `username` varchar(100) NOT NULL,
  `password` text NOT NULL,
  `email` varchar(100) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Volcado de datos para la tabla `users`
--

INSERT INTO `users` (`id`, `username`, `password`, `email`) VALUES
(2, 'ivan1', '81dc9bdb52d04dc20036dbd8313ed055', 'ivan1@gmail.com'),
(3, 'prueba', 'd93591bdf7860e1e4ee2fca799911215', 'prueba@gmail.com'),
(4, 'prueba2', 'd93591bdf7860e1e4ee2fca799911215', 'prueba2@gmail.com'),
(5, 'master', '1234', 'master@gmail.com'),
(6, 'master', '1234', 'master@gmail.com');

--
-- Índices para tablas volcadas
--

--
-- Indices de la tabla `tasks`
--
ALTER TABLE `tasks`
  ADD PRIMARY KEY (`id`),
  ADD KEY `fk_iduser` (`fk_iduser`);

--
-- Indices de la tabla `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT de las tablas volcadas
--

--
-- AUTO_INCREMENT de la tabla `tasks`
--
ALTER TABLE `tasks`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=8;

--
-- AUTO_INCREMENT de la tabla `users`
--
ALTER TABLE `users`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=7;

--
-- Restricciones para tablas volcadas
--

--
-- Filtros para la tabla `tasks`
--
ALTER TABLE `tasks`
  ADD CONSTRAINT `fk_iduser` FOREIGN KEY (`fk_iduser`) REFERENCES `users` (`id`);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;





